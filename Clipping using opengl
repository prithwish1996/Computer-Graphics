#include<stdio.h>
#include<math.h>
#include<GL/glut.h>
int xm,xmm,ym,ymm,xl1,yl1,xl2,yl2;
void Init(void)
{glColor3f(0.0,0.0,0.0);
glClearColor(0.0,0.0,0.0,0.0);
glLoadIdentity();
gluOrtho2D(0,500,0,500);
}
void setpixel(GLfloat x1,GLfloat y1,GLfloat x2,GLfloat y2)
{
  glBegin(GL_LINES);
  glVertex2f(x1,y1);
  glVertex2f(x2,y2);
  glFlush();
  glEnd();
}

void clip(GLint xmin,GLint ymin,GLint xmax,GLint ymax,GLint x11,GLint y11,GLint x22,GLint y22)
{
  int i;
   int dx=x22-x11;
   int dy = y22-y11;
   float p[5],q[5];
   p[1] = -1*dx;
   p[2] = dx;
   p[3] = -1*dy;
   p[4] = dy;
   q[1]= x11 - xmin;
   q[2] = xmax - x11;
   q[3] = y11 - ymin;
   q[4] = ymax - y11;
   float u[5];
   u[1] = q[1]/p[1];
   u[2] = q[2]/p[2];
   u[3] = q[3]/p[3];
   u[4] = q[4]/p[4];
   float umin = 1;
   float umax = 0;
   for(i=1; i<=4; i++)
   {
     if(p[i]<0)
     {//printf("p<0 %f",u[i]);
       if(u[i]>umax)
       umax = u[i];
     }
     else
     {//printf("p>0 %f",u[i]);
       if(u[i]<umin)
       umin = u[i];
     }
    //printf("%f",u[i]);
    //printf("endl");
   }
   printf("%f %f\n",umax,umin );
   float x1p,y1p,x2p,y2p;
   x1p = x11 + umax*(dx);
   x2p = x11 + umin*(dx);
   y1p = y11 + umax*(dy);
   y2p = y11 + umin*(dy);
   printf("%f %f %f %f", x1p,y1p,x2p,y2p);
   setpixel(x1p,y1p,x2p,y2p);
   glFlush();


}
void display()
{
glClear(GL_COLOR_BUFFER_BIT);
glMatrixMode(GL_PROJECTION);
glColor3f(1.0,1.0,0.0);
setpixel(xm,ym,xm,ymm);
setpixel(xm,ymm,xmm,ymm);
setpixel(xmm,ymm,xmm,ym);
setpixel(xmm,ym,xm,ym);
clip(xm,ym,xmm,ymm,xl1,yl1,xl2,yl2);

}
void main(int argc, char** argv)
{
printf("Enter xmin ymin xmax ymax x1 y1 x2 y2\n");
scanf("%d %d %d %d %d %d %d %d", &xm, &ym, &xmm, &ymm, &xl1, &yl1, &xl2, &yl2);
//line(x1,x2,x3,x4);
glutInit(&argc, argv);
glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
glutInitWindowPosition(0,0);
glutInitWindowSize(1024,1080);
glutCreateWindow("-----CLIPPING-----");
Init();
glutDisplayFunc(display);
glutMainLoop();
}
